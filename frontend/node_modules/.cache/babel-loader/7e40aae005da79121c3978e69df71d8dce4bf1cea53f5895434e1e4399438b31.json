{"ast":null,"code":"var _jsxFileName = \"/home/enginbukum/Documents/React-Apps/Advanced React-Routing/frontend/src/pages/EventDetail.js\",\n  _s = $RefreshSig$();\nimport { useLoaderData, json } from \"react-router-dom\";\nimport EventItem from \"../components/EventItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst EventDetailPage = () => {\n  _s();\n  const data = useLoaderData();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(EventItem, {\n      event: data.event\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(EventDetailPage, \"5thj+e1edPyRpKif1JmVRC6KArE=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventDetailPage;\nexport default EventDetailPage;\nexport async function loader(_ref) {\n  let {\n    request,\n    params\n  } = _ref;\n  const id = params.eventId;\n  const response = await fetch('http://localhost:8080/events/' + id);\n  //if 'return fetch', react router automatically await for the promise and give data to the component\n\n  if (!response.ok) {\n    throw json({\n      message: 'Could not fetch details for selected event'\n    }, {\n      status: 500\n    });\n  } else {\n    return response;\n  }\n}\n\n// when use loader(), you have to register in App.js, because react router doesnt do it automatically\n\n//useParams hook gives us access to the parameters of the current route, so to the values of the dynamic segments of the URL.\nvar _c;\n$RefreshReg$(_c, \"EventDetailPage\");","map":{"version":3,"names":["useLoaderData","json","EventItem","jsxDEV","_jsxDEV","Fragment","_Fragment","EventDetailPage","_s","data","children","event","fileName","_jsxFileName","lineNumber","columnNumber","_c","loader","_ref","request","params","id","eventId","response","fetch","ok","message","status","$RefreshReg$"],"sources":["/home/enginbukum/Documents/React-Apps/Advanced React-Routing/frontend/src/pages/EventDetail.js"],"sourcesContent":["import { useLoaderData, json } from \"react-router-dom\";\nimport EventItem from \"../components/EventItem\";\n\nconst EventDetailPage = () => {\n  const data = useLoaderData();\n\n  return (\n    <>\n      <EventItem event={data.event} />\n    </>\n  );\n};\n\nexport default EventDetailPage;\n\nexport async function loader({request, params}) {\n  const id = params.eventId;\n  const response = await fetch('http://localhost:8080/events/' + id)\n  //if 'return fetch', react router automatically await for the promise and give data to the component\n  \n  if (!response.ok) {\n    throw json({ message: 'Could not fetch details for selected event' }, { \n      status: 500 \n    });\n  } else {\n    return response;\n  }\n}\n\n\n\n// when use loader(), you have to register in App.js, because react router doesnt do it automatically\n\n//useParams hook gives us access to the parameters of the current route, so to the values of the dynamic segments of the URL."],"mappings":";;AAAA,SAASA,aAAa,EAAEC,IAAI,QAAQ,kBAAkB;AACtD,OAAOC,SAAS,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEhD,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAMC,IAAI,GAAGT,aAAa,EAAE;EAE5B,oBACEI,OAAA,CAAAE,SAAA;IAAAI,QAAA,eACEN,OAAA,CAACF,SAAS;MAACS,KAAK,EAAEF,IAAI,CAACE;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAG,iBAC/B;AAEP,CAAC;AAACP,EAAA,CARID,eAAe;EAAA,QACNP,aAAa;AAAA;AAAAgB,EAAA,GADtBT,eAAe;AAUrB,eAAeA,eAAe;AAE9B,OAAO,eAAeU,MAAMA,CAAAC,IAAA,EAAoB;EAAA,IAAnB;IAACC,OAAO;IAAEC;EAAM,CAAC,GAAAF,IAAA;EAC5C,MAAMG,EAAE,GAAGD,MAAM,CAACE,OAAO;EACzB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,GAAGH,EAAE,CAAC;EAClE;;EAEA,IAAI,CAACE,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAMxB,IAAI,CAAC;MAAEyB,OAAO,EAAE;IAA6C,CAAC,EAAE;MACpEC,MAAM,EAAE;IACV,CAAC,CAAC;EACJ,CAAC,MAAM;IACL,OAAOJ,QAAQ;EACjB;AACF;;AAIA;;AAEA;AAAA,IAAAP,EAAA;AAAAY,YAAA,CAAAZ,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}